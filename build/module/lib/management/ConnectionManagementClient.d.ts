import { GraphqlClient } from './../common/GraphqlClient';
import { ManagementTokenProvider } from './ManagementTokenProvider';
import { ManagementClientOptions } from './types';
import { CreateOidcAppVariables } from '../../types/codeGen';
export declare class ConnectionManagementClient {
    options: ManagementClientOptions;
    graphqlClient: GraphqlClient;
    tokenProvider: ManagementTokenProvider;
    constructor(options: ManagementClientOptions, graphqlClient: GraphqlClient, tokenProvider: ManagementTokenProvider);
    oidcProviders(page?: number, count?: number): Promise<{
        totalCount?: number;
        list?: {
            _id?: string;
            name?: string;
            domain?: string;
            image?: string;
            redirect_uris?: string[];
            client_id?: string;
            client_secret?: string;
            token_endpoint_auth_method?: string;
            id_token_signed_response_alg?: string;
            id_token_encrypted_response_alg?: string;
            id_token_encrypted_response_enc?: string;
            userinfo_signed_response_alg?: string;
            userinfo_encrypted_response_alg?: string;
            userinfo_encrypted_response_enc?: string;
            request_object_signing_alg?: string;
            request_object_encryption_alg?: string;
            request_object_encryption_enc?: string;
            jwks_uri?: string;
            _jwks_uri?: string;
            custom_jwks?: string;
            jwks?: string;
            _jwks?: string;
            clientId?: string;
            grant_types?: string[];
            response_types?: string[];
            description?: string;
            homepageURL?: string;
            isDeleted?: boolean;
            isDefault?: boolean;
            when?: string;
            css?: string;
            authorization_code_expire?: string;
            id_token_expire?: string;
            access_token_expire?: string;
            cas_expire?: string;
            loginUrl?: string;
        }[];
    }>;
    createOidcProvider(app: CreateOidcAppVariables): Promise<{
        _id?: string;
        name?: string;
        domain?: string;
        image?: string;
        redirect_uris?: string[];
        client_id?: string;
        client_secret?: string;
        token_endpoint_auth_method?: string;
        id_token_signed_response_alg?: string;
        id_token_encrypted_response_alg?: string;
        id_token_encrypted_response_enc?: string;
        userinfo_signed_response_alg?: string;
        userinfo_encrypted_response_alg?: string;
        userinfo_encrypted_response_enc?: string;
        request_object_signing_alg?: string;
        request_object_encryption_alg?: string;
        request_object_encryption_enc?: string;
        jwks_uri?: string;
        _jwks_uri?: string;
        custom_jwks?: string;
        jwks?: string;
        _jwks?: string;
        clientId?: string;
        grant_types?: string[];
        response_types?: string[];
        description?: string;
        homepageURL?: string;
        isDeleted?: boolean;
        isDefault?: boolean;
        when?: string;
        css?: string;
        authorization_code_expire?: string;
        id_token_expire?: string;
        access_token_expire?: string;
        cas_expire?: string;
        loginUrl?: string;
        customStyles?: {
            forceLogin?: boolean;
            hideQRCode?: boolean;
            hideUP?: boolean;
            hideUsername?: boolean;
            hideRegister?: boolean;
            hidePhone?: boolean;
            hideSocial?: boolean;
            hideClose?: boolean;
            hidePhonePassword?: boolean;
            defaultLoginMethod?: import("../../types/codeGen").OidcProviderDefaultLoginMethod;
        };
    }>;
    oidcProviderByDomain(domain: string): Promise<{
        _id?: string;
        name?: string;
        domain?: string;
        image?: string;
        redirect_uris?: string[];
        client_id?: string;
        client_secret?: string;
        token_endpoint_auth_method?: string;
        id_token_signed_response_alg?: string;
        id_token_encrypted_response_alg?: string;
        id_token_encrypted_response_enc?: string;
        userinfo_signed_response_alg?: string;
        userinfo_encrypted_response_alg?: string;
        userinfo_encrypted_response_enc?: string;
        request_object_signing_alg?: string;
        request_object_encryption_alg?: string;
        request_object_encryption_enc?: string;
        jwks_uri?: string;
        _jwks_uri?: string;
        custom_jwks?: string;
        jwks?: string;
        _jwks?: string;
        clientId?: string;
        grant_types?: string[];
        response_types?: string[];
        description?: string;
        homepageURL?: string;
        isDeleted?: boolean;
        isDefault?: boolean;
        when?: string;
        css?: string;
        authorization_code_expire?: string;
        id_token_expire?: string;
        access_token_expire?: string;
        cas_expire?: string;
        loginUrl?: string;
        customStyles?: {
            forceLogin?: boolean;
            hideQRCode?: boolean;
            hideUP?: boolean;
            hideUsername?: boolean;
            hideRegister?: boolean;
            hidePhone?: boolean;
            hideSocial?: boolean;
            hideClose?: boolean;
            hidePhonePassword?: boolean;
            defaultLoginMethod?: import("../../types/codeGen").OidcProviderDefaultLoginMethod;
        };
    }>;
}
