{"version":3,"file":"node_modules/@authing/miniapp-sm2encrypt/lib/sm3.js","names":["rotl","x","n","result","a","b","i","len","length","xor","y","and","or","add","temp","sum","not","P0","X","P1","FF","Y","Z","j","GG","CF","V","Bi","W","M","start","push","slice","T1","T2","SS1","SS2","TT1","TT2","A","B","C","D","E","F","G","H","T","concat","sm3","array","k","kArr","Array","lenArr","toString","parseInt","substr","m","blockLen","iPad","oPad","hmac","input","key","hash"],"sources":["node_modules/@authing/miniapp-sm2encrypt/lib/sm3.js"],"sourcesContent":["/**\n * 循环左移\n */\nfunction rotl(x, n) {\n  const result = []\n  const a = ~~(n / 8) // 偏移 a 字节\n  const b = n % 8 // 偏移 b 位\n  for (let i = 0, len = x.length; i < len; i++) {\n    // current << b + (current + 1) >>> (8 - b)\n    result[i] = ((x[(i + a) % len] << b) & 0xff) + ((x[(i + a + 1) % len] >>> (8 - b)) & 0xff)\n  }\n  return result\n}\n\n/**\n * 二进制异或运算\n */\nfunction xor(x, y) {\n  const result = []\n  for (let i = x.length - 1; i >= 0; i--) result[i] = (x[i] ^ y[i]) & 0xff\n  return result\n}\n\n/**\n * 二进制与运算\n */\nfunction and(x, y) {\n  const result = []\n  for (let i = x.length - 1; i >= 0; i--) result[i] = (x[i] & y[i]) & 0xff\n  return result\n}\n\n/**\n * 二进制或运算\n */\nfunction or(x, y) {\n  const result = []\n  for (let i = x.length - 1; i >= 0; i--) result[i] = (x[i] | y[i]) & 0xff\n  return result\n}\n\n/**\n * 二进制与运算\n */\nfunction add(x, y) {\n  const result = []\n  let temp = 0\n  for (let i = x.length - 1; i >= 0; i--) {\n    const sum = x[i] + y[i] + temp\n    if (sum > 0xff) {\n      temp = 1\n      result[i] = sum & 0xff\n    } else {\n      temp = 0\n      result[i] = sum & 0xff\n    }\n  }\n  return result\n}\n\n/**\n * 二进制非运算\n */\nfunction not(x) {\n  const result = []\n  for (let i = x.length - 1; i >= 0; i--) result[i] = (~x[i]) & 0xff\n  return result\n}\n\n/**\n * 压缩函数中的置换函数 P1(X) = X xor (X <<< 9) xor (X <<< 17)\n */\nfunction P0(X) {\n  return xor(xor(X, rotl(X, 9)), rotl(X, 17))\n}\n\n/**\n * 消息扩展中的置换函数 P1(X) = X xor (X <<< 15) xor (X <<< 23)\n */\nfunction P1(X) {\n  return xor(xor(X, rotl(X, 15)), rotl(X, 23))\n}\n\n/**\n * 布尔函数 FF\n */\nfunction FF(X, Y, Z, j) {\n  return j >= 0 && j <= 15 ? xor(xor(X, Y), Z) : or(or(and(X, Y), and(X, Z)), and(Y, Z))\n}\n\n/**\n * 布尔函数 GG\n */\nfunction GG(X, Y, Z, j) {\n  return j >= 0 && j <= 15 ? xor(xor(X, Y), Z) : or(and(X, Y), and(not(X), Z))\n}\n\n/**\n * 压缩函数\n */\nfunction CF(V, Bi) {\n  // 消息扩展\n  const W = []\n  const M = [] // W'\n\n  // 将消息分组B划分为 16 个字 W0， W1，……，W15\n  for (let i = 0; i < 16; i++) {\n    const start = i * 4\n    W.push(Bi.slice(start, start + 4))\n  }\n\n  // W16 ～ W67：W[j] <- P1(W[j−16] xor W[j−9] xor (W[j−3] <<< 15)) xor (W[j−13] <<< 7) xor W[j−6]\n  for (let j = 16; j < 68; j++) {\n    W.push(xor(\n      xor(\n        P1(\n          xor(\n            xor(W[j - 16], W[j - 9]),\n            rotl(W[j - 3], 15)\n          )\n        ),\n        rotl(W[j - 13], 7)\n      ),\n      W[j - 6]\n    ))\n  }\n\n  // W′0 ～ W′63：W′[j] = W[j] xor W[j+4]\n  for (let j = 0; j < 64; j++) {\n    M.push(xor(W[j], W[j + 4]))\n  }\n\n  // 压缩\n  const T1 = [0x79, 0xcc, 0x45, 0x19]\n  const T2 = [0x7a, 0x87, 0x9d, 0x8a]\n  // 字寄存器\n  let A = V.slice(0, 4)\n  let B = V.slice(4, 8)\n  let C = V.slice(8, 12)\n  let D = V.slice(12, 16)\n  let E = V.slice(16, 20)\n  let F = V.slice(20, 24)\n  let G = V.slice(24, 28)\n  let H = V.slice(28, 32)\n  // 中间变量\n  let SS1\n  let SS2\n  let TT1\n  let TT2\n  for (let j = 0; j < 64; j++) {\n    const T = j >= 0 && j <= 15 ? T1 : T2\n    SS1 = rotl(add(\n      add(rotl(A, 12), E),\n      rotl(T, j)\n    ), 7)\n    SS2 = xor(SS1, rotl(A, 12))\n\n    TT1 = add(add(add(FF(A, B, C, j), D), SS2), M[j])\n    TT2 = add(add(add(GG(E, F, G, j), H), SS1), W[j])\n\n    D = C\n    C = rotl(B, 9)\n    B = A\n    A = TT1\n    H = G\n    G = rotl(F, 19)\n    F = E\n    E = P0(TT2)\n  }\n\n  return xor([].concat(A, B, C, D, E, F, G, H), V)\n}\n\n/**\n * sm3 本体\n */\nfunction sm3(array) {\n  // 填充\n  let len = array.length * 8\n\n  // k 是满足 len + 1 + k = 448mod512 的最小的非负整数\n  let k = len % 512\n  // 如果 448 <= (512 % len) < 512，需要多补充 (len % 448) 比特'0'以满足总比特长度为512的倍数\n  k = k >= 448 ? 512 - (k % 448) - 1 : 448 - k - 1\n\n  // 填充\n  const kArr = new Array((k - 7) / 8)\n  for (let i = 0, len = kArr.length; i < len; i++) kArr[i] = 0\n  const lenArr = []\n  len = len.toString(2)\n  for (let i = 7; i >= 0; i--) {\n    if (len.length > 8) {\n      const start = len.length - 8\n      lenArr[i] = parseInt(len.substr(start), 2)\n      len = len.substr(0, start)\n    } else if (len.length > 0) {\n      lenArr[i] = parseInt(len, 2)\n      len = ''\n    } else {\n      lenArr[i] = 0\n    }\n  }\n  const m = [].concat(array, [0x80], kArr, lenArr)\n\n  // 迭代压缩\n  const n = m.length / 64\n  let V = [0x73, 0x80, 0x16, 0x6f, 0x49, 0x14, 0xb2, 0xb9, 0x17, 0x24, 0x42, 0xd7, 0xda, 0x8a, 0x06, 0x00, 0xa9, 0x6f, 0x30, 0xbc, 0x16, 0x31, 0x38, 0xaa, 0xe3, 0x8d, 0xee, 0x4d, 0xb0, 0xfb, 0x0e, 0x4e]\n  for (let i = 0; i < n; i++) {\n    const start = 64 * i\n    const B = m.slice(start, start + 64)\n    V = CF(V, B)\n  }\n  return V\n}\n\n/**\n * hmac 实现\n */\nconst blockLen = 64\nconst iPad = new Array(blockLen)\nconst oPad = new Array(blockLen)\nfor (let i = 0; i < blockLen; i++) {\n  iPad[i] = 0x36\n  oPad[i] = 0x5c\n}\nfunction hmac(input, key) {\n  // 密钥填充\n  if (key.length > blockLen) key = sm3(key)\n  while (key.length < blockLen) key.push(0)\n\n  const iPadKey = xor(key, iPad)\n  let hash = iPadKey.concat(input)\n  hash = sm3(hash)\n\n  const oPadKey = xor(key, oPad)\n  hash = oPadKey.concat(hash)\n  hash = sm3(hash)\n\n  return hash\n}\n\nexport {\n  sm3,\n  hmac\n}"],"mappings":"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"}